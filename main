import java.util.ArrayList;
import java.util.Scanner;

public class Main {
    private ArrayList<Cliente> clientes = new ArrayList<>();
    private ArrayList<Equipamento> aparelhos = new ArrayList<>();
    private Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) {
        new Menu(new Main()); // Passa a instância de Main para o Menu
    }

    public class Cliente {
        private String nome;
        private String cpf;
        private String email;
        private String celular;

        public Cliente(String nome, String cpf, String email, String celular) {
            this.nome = nome;
            this.cpf = cpf;
            this.email = email;
            this.celular = celular;
        }
    }

    public class Emprestimo {
        private String codigoEquipamento;
        private String codigoCliente;

        public Emprestimo(String codigoEquipamento, String codigoCliente) {
            this.codigoEquipamento = codigoEquipamento;
            this.codigoCliente = codigoCliente;
        }
    }

    public class Equipamento {
        private String codigo;
        private String descricao;
        private String status;
        private String situacao;

        public Equipamento(String codigo, String descricao, String status, String situacao) {
            this.codigo = codigo;
            this.descricao = descricao;
            this.status = status;
            this.situacao = situacao;
        }

        public String getCodigo() {
            return codigo;
        }

        public String getStatus() {
            return status;
        }

        public String getSituacao() {
            return situacao;
        }

        public void setStatus(String status) {
            this.status = status;
        }

        public void imprimirDetalhes() {
            System.out.println("Código: " + codigo);
            System.out.println("Descrição: " + descricao);
            System.out.println("Status: " + status);
            System.out.println("Situação: " + situacao);
            System.out.println("----------------------");
        }
    }

    public void listar() {
        listagem(aparelhos);
    }

    private void emprestados(ArrayList<Equipamento> aparelhos) {
        boolean encontrouEmprestado = false;

        for (Equipamento equipamento : aparelhos) {
            if (equipamento.getStatus().equals("emprestado")) {
                encontrouEmprestado = true;
                equipamento.imprimirDetalhes();
            }
        }

        if (!encontrouEmprestado) {
            System.out.println("Nenhum equipamento está emprestado no momento.");
        }
    }

    private void disponiveis(ArrayList<Equipamento> aparelhos) {
        boolean encontrouDisponivel = false;

        for (Equipamento equipamento : aparelhos) {
            if (equipamento.getStatus().equals("disponível")) {
                encontrouDisponivel = true;
                equipamento.imprimirDetalhes();
            }
        }

        if (!encontrouDisponivel) {
            System.out.println("Nenhum equipamento está disponível no momento.");
        }
    }

    private void manutencao(ArrayList<Equipamento> aparelhos) {
        boolean encontrouManutencao = false;

        for (Equipamento equipamento : aparelhos) {
            if (equipamento.getStatus().equals("manutencao")) {
                encontrouManutencao = true;
                equipamento.imprimirDetalhes();
            }
        }

        if (!encontrouManutencao) {
            System.out.println("Nenhum equipamento está em manutenção no momento.");
        }
    }

    private void baixados(ArrayList<Equipamento> aparelhos) {
        boolean encontrouBaixado = false;

        for (Equipamento equipamento : aparelhos) {
            if (equipamento.getSituacao().equals("baixado")) {
                encontrouBaixado = true;
                equipamento.imprimirDetalhes();
            }
        }

        if (!encontrouBaixado) {
            System.out.println("Nenhum equipamento está baixado no momento.");
        }
    }

    private void listagem(ArrayList<Equipamento> aparelhos) {
        System.out.println("\n1- Equipamentos emprestados e com quem está");
        System.out.println("2- Equipamentos disponíveis para empréstimo");
        System.out.println("3- Equipamentos em manutenção");
        System.out.println("4- Equipamentos baixados");
        System.out.println("\nO que você deseja ver? (Digite o número da opção)");

        String escolha = scanner.nextLine().trim();

        switch (escolha) {
            case "1":
                emprestados(aparelhos);
                break;
            case "2":
                disponiveis(aparelhos);
                break;
            case "3":
                manutencao(aparelhos);
                break;
            case "4":
                baixados(aparelhos);
                break;
            default:
                System.out.println("Opção inválida. Por favor, digite um número de 1 a 4.");
                listagem(aparelhos);
                break;
        }
    }

    public void adicionarPessoa() {
        System.out.println("Digite o nome:");
        String nome = scanner.nextLine();

        System.out.println("Digite o CPF:");
        String cpf = scanner.nextLine();

        System.out.println("Digite o email:");
        String email = scanner.nextLine();

        System.out.println("Digite o celular:");
        String celular = scanner.nextLine();

        Cliente novoCliente = new Cliente(nome, cpf, email, celular);
        clientes.add(novoCliente);

        System.out.println("Cliente adicionado com sucesso!");
    }

    public void cadastrarEquipamento() {
        System.out.println("Digite o código do equipamento:");
        String codigo = scanner.nextLine();

        System.out.println("Digite a descrição do equipamento:");
        String descricao = scanner.nextLine();

        System.out.println("Digite o status do equipamento (d para Disponível, e para Emprestado, m para Manutenção): ");
        String status = scanner.nextLine();
        switch (status) {
            case "d":
                status = "disponível";
                break;
            case "e":
                status = "emprestado";
                break;
            case "m":
                status = "manutenção";
                break;
            default:
                System.out.println("Status inválido. Por favor, digite 'd' para disponível, 'e' para emprestado ou 'm' para manutenção.");
                return; // Saia do método se o status for inválido
        }

        System.out.println("Digite a situação do equipamento (n para Novo, u para Usado, d para Defeito, b para Baixado):");
        String situacao = scanner.nextLine();
        switch (situacao) {
            case "n":
                situacao = "novo";
                break;
            case "u":
                situacao = "usado";
                break;
            case "d":
                situacao = "defeito";
                break;
            case "b":
                situacao = "baixado";
                break;
            default:
                System.out.println("Estado inválido. Por favor, digite 'n' para novo, 'u' para usado, 'd' para defeito ou 'b' para baixado.");
                return; // Saia do método se a situação for inválida
        }

        Equipamento novoEquipamento = new Equipamento(codigo, descricao, status, situacao);
        aparelhos.add(novoEquipamento);

        System.out.println("Equipamento cadastrado com sucesso!");
    }

    public void logicaEmprestimo() {
        disponiveis(aparelhos);
        System.out.println("Selecione o equipamento que você deseja emprestar!");

        System.out.println("Digite o código do equipamento que você deseja emprestar:");
        String codigoSelecionado = scanner.nextLine();

        boolean equipamentoEncontrado = false;
        for (Equipamento equipamento : aparelhos) {
            if (equipamento.getCodigo().equals(codigoSelecionado) && equipamento.getStatus().equals("disponível")) {
                equipamento.setStatus("emprestado");
                System.out.println("Equipamento " + equipamento.getCodigo() + " foi emprestado com sucesso.");
                equipamentoEncontrado = true;
                break;
            }
        }

        if (!equipamentoEncontrado) {
            System.out.println("Equipamento não encontrado ou já está emprestado.");
        }
    }

    public void devolverEquipamento() {
        System.out.println("Digite o código do equipamento a ser devolvido:");
        String codigo = scanner.nextLine();

        boolean equipamentoEncontrado = false;

        for (Equipamento equipamento : aparelhos) {
            if (equipamento.getCodigo().equals(codigo)) {
                if (equipamento.getStatus().equals("emprestado")) {
                    equipamento.setStatus("disponível");
                    System.out.println("Equipamento devolvido e agora está disponível para empréstimo.");
                } else {
                    System.out.println("O equipamento já está disponível ou não está emprestado.");
                }
                equipamentoEncontrado = true;
                break;
            }
        }

        if (!equipamentoEncontrado) {
            System.out.println("Equipamento com o código fornecido não encontrado.");
        }
    }

    static class Menu {
        private Main main;

        public Menu(Main main) {
            this.main = main; // Armazena a instância de Main passada
            int menu = 1;
            Scanner scanner = new Scanner(System.in);

            while (menu != 0) {
                System.out.println("Seja bem-vindo à central de empréstimos, o que deseja fazer?\n" +
                                   "1. Cadastrar Cliente\n" +
                                   "2. Cadastrar Equipamento\n" +
                                   "3. Emprestar Equipamento\n" +
                                   "4. Devolver Equipamento\n" +
                                   "5. Listar Equipamentos\n" +
                                   "0. Sair");

                menu = scanner.nextInt();
                scanner.nextLine(); // Limpar o buffer

                switch (menu) {
                    case 1:
                        main.adicionarPessoa();
                        break;
                    case 2:
                        main.cadastrarEquipamento();
                        break;
                    case 3:
                        main.logicaEmprestimo();
                        break;
                    case 4:
                        main.devolverEquipamento();
                        break;
                    case 5:
                        main.listar();
                        break;
                    case 0:
                        System.out.println("Saindo...");
                        break;
                    default:
                        System.out.println("Opção inválida. Por favor, selecione uma opção válida.");
                        break;
                }
            }
            scanner.close();
        }
    }
}
